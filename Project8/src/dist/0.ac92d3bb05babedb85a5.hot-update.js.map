{"version":3,"sources":["webpack:///./src/redux/saga/index.js"],"names":["bindEmployeeDetails","rootSaga","delay","setTimeout","res","ms","request","call","options","put","message"],"mappings":";;;;;;;;;;;;;;;;;;;;kGAOiBA,mB;mGAoCAC,Q;;AA3CjB;AACA;AACA;AACA;;AAEO,IAAMC,QAAQ,SAARA,KAAQ;AAAA,SAAM,0EAAY;AAAA,WAAOC,WAAWC,GAAX,EAAgBC,EAAhB,CAAP;AAAA,GAAZ,CAAN;AAAA,CAAd;;AAEA,SAAUL,mBAAV,CAA8BM,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEmB,wEAAAC,CAAK,2DAAL,CAFnB;;AAAA;AAEGC,iBAFH;AAAA;AAAA,iBAGG,uEAAAC,CAAI,4EAAwBD,OAAxB,CAAJ,CAHH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKG,uEAAAC,CAAI,2EAAuB,YAAEC,OAAzB,CAAJ,CALH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASP;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BO,SAAUT,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACC,CACJD,qBADI,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;gCAtCME,K;;gCAEIF,mB;;gCAoCAC,Q","file":"0.ac92d3bb05babedb85a5.hot-update.js","sourcesContent":["import { getEmpDetails } from '../api';\r\nimport { call, put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/EmpAction';\r\nimport * as types from '../constants/ActionTypes';\r\n\r\nexport const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nexport function* bindEmployeeDetails(request) {\r\n  try {\r\n    const options = yield call(getEmpDetails);\r\n    yield put(actions.EmployeeSuccess(options));\r\n  } catch (e) {\r\n    yield put(actions.EmployeeFailed(e.message));\r\n  }\r\n}\r\n\r\n/*\r\nexport function* employeeCreation() {\r\n  try {\r\n    // const options = yield call(getItems);\r\n    // yield put(actions.itemsLoadSuccess(options));\r\n  } catch (e) {\r\n    // yield put(actions.itemsLoadFailed(e.message));\r\n  }\r\n}\r\n\r\nexport function* watchForEmployeeCreation() {\r\n  yield takeEvery(types.ON_EMP_CREATION, employeeCreation);\r\n}\r\n\r\nexport function* deleteEmployee(request) {\r\n  try {\r\n    // const options = yield call(getPlanetsItem, request.url);\r\n    // yield put(actions.planetsLoadSuccess(options));\r\n  } catch (e) {\r\n    // yield put(actions.planetsLoadFailed(e.message));\r\n  }\r\n}\r\n\r\nexport function* watchForEmployeeDeletion() {\r\n  yield takeEvery(types.ON_EMP_DELETION, deleteEmployee);\r\n} */\r\n\r\nexport function* rootSaga() {\r\n  yield [\r\n    bindEmployeeDetails(),\r\n    // watchForEmployeeCreation(),\r\n    // watchForEmployeeDeletion(),\r\n  ];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/saga/index.js"],"sourceRoot":""}