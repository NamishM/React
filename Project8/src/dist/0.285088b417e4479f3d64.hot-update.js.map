{"version":3,"sources":["webpack:///./src/modules/containers/MainView.jsx","webpack:///./src/redux/saga/index.js","webpack:///./src/redux/actions/EmpAction.js"],"names":["mapStateToProps","employeeData","state","mapDispatchToProps","onNewEmployeeCreation","dispatch","onEmployeeDeletion","id","connect","bindEmployeeDetails","rootSaga","delay","setTimeout","res","ms","call","options","put","message","EmployeeSuccess","type","EMPLOYEE_SUCCESS","EmployeeFailed","EMPLOYEE_FAILED"],"mappings":";;;;;;;;;AAAA;AACA;AACA;;AAEA,IAAMA,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCC,kBAAcC,MAAMD;AADY,GAAV;AAAA,CAAxB;;AAIA,IAAME,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;AACtCC,2BAAuB,iCAAM;AAC3BC,eAAS,4FAAT;AACD,KAHqC;AAItCC,wBAAoB,4BAACC,EAAD,EAAQ;AAC1BF,eAAS,wFAA2BE,EAA3B,CAAT;AACD;AANqC,GAAb;AAAA,CAA3B;;eASe,oEAAAC,CAAQR,eAAR,EAAyBG,kBAAzB,EAA6C,uEAA7C,C;;;AAAf;;;;;;;;gCAbMH,e;;gCAIAG,kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCDWM,mB;mGAoCAC,Q;;AA3CjB;AACA;AACA;AACA;;AAEO,IAAMC,QAAQ,SAARA,KAAQ;AAAA,SAAM,0EAAY;AAAA,WAAOC,WAAWC,GAAX,EAAgBC,EAAhB,CAAP;AAAA,GAAZ,CAAN;AAAA,CAAd;;AAEA,SAAUL,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEmB,wEAAAM,CAAK,2DAAL,CAFnB;;AAAA;AAEGC,iBAFH;AAAA;AAAA,iBAGG,uEAAAC,CAAI,4EAAwBD,OAAxB,CAAJ,CAHH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKG,uEAAAC,CAAI,2EAAuB,YAAEC,OAAzB,CAAJ,CALH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASP;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BO,SAAUR,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACC,CACJD,qBADI,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;gCAtCME,K;;gCAEIF,mB;;gCAoCAC,Q;;;;;;;;;;;;;;;;;;;;;;;;;AC3CjB;;AAEO,IAAMS,kBAAkB,SAAlBA,eAAkB;AAAA,SAAO;AACpCC,UAAM,gFAAMC;AADwB,GAAP;AAAA,CAAxB;;AAIA,IAAMC,iBAAiB,SAAjBA,cAAiB;AAAA,SAAO;AACnCF,UAAM,+EAAMG;AADuB,GAAP;AAAA,CAAvB;;AAIA,IAAMnB,wBAAwB,SAAxBA,qBAAwB;AAAA,SAAY;AAC/CgB,UAAM,+EADyC;AAE/CJ;AAF+C,GAAZ;AAAA,CAA9B;;AAKA,IAAMV,qBAAqB,SAArBA,kBAAqB;AAAA,SAAO;AACvCc,UAAM,+EADiC;AAEvCb;AAFuC,GAAP;AAAA,CAA3B;;;;;;;;gCAbMY,e;;gCAIAG,c;;gCAIAlB,qB;;gCAKAE,kB","file":"0.285088b417e4479f3d64.hot-update.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport MainViewUI from '../components/MainViewUI';\r\nimport * as actions from 'src/redux/actions/EmpAction';\r\n\r\nconst mapStateToProps = state => ({\r\n  employeeData: state.employeeData,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onNewEmployeeCreation: () => {\r\n    dispatch(actions.onNewEmployeeCreation());\r\n  },\r\n  onEmployeeDeletion: (id) => {\r\n    dispatch(actions.onEmployeeDeletion(id));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainViewUI);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/containers/MainView.jsx","import { getEmpDetails } from '../api';\r\nimport { call, put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/EmpAction';\r\n// import * as types from '../constants/ActionTypes';\r\n\r\nexport const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nexport function* bindEmployeeDetails() {\r\n  try {\r\n    const options = yield call(getEmpDetails);\r\n    yield put(actions.EmployeeSuccess(options));\r\n  } catch (e) {\r\n    yield put(actions.EmployeeFailed(e.message));\r\n  }\r\n}\r\n\r\n/*\r\nexport function* employeeCreation() {\r\n  try {\r\n    // const options = yield call(getItems);\r\n    // yield put(actions.itemsLoadSuccess(options));\r\n  } catch (e) {\r\n    // yield put(actions.itemsLoadFailed(e.message));\r\n  }\r\n}\r\n\r\nexport function* watchForEmployeeCreation() {\r\n  yield takeEvery(types.ON_EMP_CREATION, employeeCreation);\r\n}\r\n\r\nexport function* deleteEmployee(request) {\r\n  try {\r\n    // const options = yield call(getPlanetsItem, request.url);\r\n    // yield put(actions.planetsLoadSuccess(options));\r\n  } catch (e) {\r\n    // yield put(actions.planetsLoadFailed(e.message));\r\n  }\r\n}\r\n\r\nexport function* watchForEmployeeDeletion() {\r\n  yield takeEvery(types.ON_EMP_DELETION, deleteEmployee);\r\n} */\r\n\r\nexport function* rootSaga() {\r\n  yield [\r\n    bindEmployeeDetails(),\r\n    // watchForEmployeeCreation(),\r\n    // watchForEmployeeDeletion(),\r\n  ];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/saga/index.js","import * as types from '../constants/ActionTypes';\r\n\r\nexport const EmployeeSuccess = () => ({\r\n  type: types.EMPLOYEE_SUCCESS,\r\n});\r\n\r\nexport const EmployeeFailed = () => ({\r\n  type: types.EMPLOYEE_FAILED,\r\n});\r\n\r\nexport const onNewEmployeeCreation = options => ({\r\n  type: types.ON_EMP_CREATION,\r\n  options,\r\n});\r\n\r\nexport const onEmployeeDeletion = id => ({\r\n  type: types.ON_EMP_DELETION,\r\n  id,\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/actions/EmpAction.js"],"sourceRoot":""}