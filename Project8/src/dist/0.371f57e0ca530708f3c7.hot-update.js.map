{"version":3,"sources":["webpack:///./src/redux/saga/index.js","webpack:///./src/redux/api/index.js"],"names":["bindEmployeeDetails","employeeCreation","watchForEmployeeCreation","rootSaga","delay","setTimeout","res","ms","call","options","put","message","takeEvery","types","ON_EMP_CREATION","getEmpDetails","superagent","get","query","set","then","JSON","parse","resp","text","data","login"],"mappings":";;;;;;;;;;;;;;;;;;;;;kGAOiBA,mB;mGASAC,gB;mGASAC,wB;mGAkBAC,Q;;AA3CjB;AACA;AACA;AACA;;AAEO,IAAMC,QAAQ,SAARA,KAAQ;AAAA,SAAM,0EAAY;AAAA,WAAOC,WAAWC,GAAX,EAAgBC,EAAhB,CAAP;AAAA,GAAZ,CAAN;AAAA,CAAd;;AAEA,SAAUP,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEmB,wEAAAQ,CAAK,2DAAL,CAFnB;;AAAA;AAEGC,iBAFH;AAAA;AAAA,iBAGG,uEAAAC,CAAI,4EAAwBD,OAAxB,CAAJ,CAHH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKG,uEAAAC,CAAI,2EAAuB,YAAEC,OAAzB,CAAJ,CALH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUV,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEmB,wEAAAO,CAAK,sDAAL,CAFnB;;AAAA;AAEGC,iBAFH;AAAA;AAAA,iBAGG,uEAAAC,CAAI,4EAAwBD,OAAxB,CAAJ,CAHH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKG,uEAAAC,CAAI,2EAAuB,aAAEC,OAAzB,CAAJ,CALH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUT,wBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACCU,UAAUC,MAAMC,eAAhB,EAAiCb,gBAAjC,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIP;;;;;;;;;;;;;;AAcO,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACC,CACJH,qBADI,EAEJE,0BAFI,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;gCAtCME,K;;gCAEIJ,mB;;gCASAC,gB;;gCASAC,wB;;gCAkBAC,Q;;;;;;;;;;;;;;;;;;;;;;;AC3CjB;;AAEO,SAASY,aAAT,GAAyB;AAC9B,SAAO,kDAAAC,CACJC,GADI,CACA,UADA,EAEJC,KAFI,CAEE,EAAEA,OAAO,0BAAT,EAFF,EAGJC,GAHI,CAGA,QAHA,EAGU,kBAHV,EAIJC,IAJI,CAIC;AAAA,WAAQC,KAAKC,KAAL,CAAWC,KAAKC,IAAhB,EAAsBC,IAAtB,CAA2BC,KAAnC;AAAA,GAJD,CAAP;AAKD;;;;;;;;gCANeX,a","file":"0.371f57e0ca530708f3c7.hot-update.js","sourcesContent":["import { getEmpDetails, createEmpDetails } from '../api';\r\nimport { call, put } from 'redux-saga/effects';\r\nimport * as actions from '../actions/EmpAction';\r\n// import * as types from '../constants/ActionTypes';\r\n\r\nexport const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nexport function* bindEmployeeDetails() {\r\n  try {\r\n    const options = yield call(getEmpDetails);\r\n    yield put(actions.EmployeeSuccess(options));\r\n  } catch (e) {\r\n    yield put(actions.EmployeeFailed(e.message));\r\n  }\r\n}\r\n\r\nexport function* employeeCreation() {\r\n  try {\r\n    const options = yield call(createEmpDetails);\r\n    yield put(actions.EmployeeSuccess(options));\r\n  } catch (e) {\r\n    yield put(actions.EmployeeFailed(e.message));\r\n  }\r\n}\r\n\r\nexport function* watchForEmployeeCreation() {\r\n  yield takeEvery(types.ON_EMP_CREATION, employeeCreation);\r\n}\r\n\r\n/*\r\nexport function* deleteEmployee(request) {\r\n  try {\r\n    // const options = yield call(getPlanetsItem, request.url);\r\n    // yield put(actions.planetsLoadSuccess(options));\r\n  } catch (e) {\r\n    // yield put(actions.planetsLoadFailed(e.message));\r\n  }\r\n}\r\n\r\nexport function* watchForEmployeeDeletion() {\r\n  yield takeEvery(types.ON_EMP_DELETION, deleteEmployee);\r\n} */\r\n\r\nexport function* rootSaga() {\r\n  yield [\r\n    bindEmployeeDetails(),\r\n    watchForEmployeeCreation(),\r\n    // watchForEmployeeDeletion(),\r\n  ];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/saga/index.js","import superagent from 'superagent';\r\n\r\nexport function getEmpDetails() {\r\n  return superagent\r\n    .get('/graphql')\r\n    .query({ query: '{login {name password} }' })\r\n    .set('Accept', 'application/json')\r\n    .then(resp => JSON.parse(resp.text).data.login);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/api/index.js"],"sourceRoot":""}