{"version":3,"sources":["webpack:///./src/modules/landing/containers/MainView.jsx","webpack:///./src/modules/landing/components/MainViewUI.jsx","webpack:///./src/modules/landing/components/Header.jsx","webpack:///./src/modules/landing/components/Footer.jsx","webpack:///./src/modules/landing/components/ItemViewUI.jsx"],"names":["mapStateToProps","loginSuccess","state","auth","items","results","planetsItem","mapDispatchToProps","onCheckCredentials","credentials","dispatch","checkCredentials","getPlanetsData","url","connect","MainViewUI","propTypes","PropTypes","bool","arrayOf","shape","name","string","isRequired","func","Header","Footer","ItemViewUI","length","map","item","index","e","preventDefault","homeworld","color","population","terrain","poplulation"],"mappings":"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","file":"0.bundle.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport {\r\n  checkCredentials,\r\n  getPlanetsData,\r\n}\r\n  from 'src/redux/actions/ItemsAction';\r\nimport MainViewUI from '../components/MainViewUI';\r\n\r\nconst mapStateToProps = state => ({\r\n  loginSuccess: state.auth.loginSuccess,\r\n  items: state.results,\r\n  planetsItem: state.planetsItem,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onCheckCredentials: ({\r\n    credentials,\r\n  }) => dispatch(checkCredentials(credentials)),\r\n  getPlanetsData: url => dispatch(getPlanetsData(url)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainViewUI);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/landing/containers/MainView.jsx","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport ItemViewUI from './ItemViewUI';\r\n\r\nconst MainViewUI = (\r\n  { loginSuccess, items, getPlanetsData, planetsItem },\r\n) => (\r\n  <div className=\"mainContainer\">\r\n    {\r\n      loginSuccess ?\r\n        <div className=\"mainView\">\r\n          <Header />\r\n          <ItemViewUI\r\n            items={items}\r\n            getPlanetsData={getPlanetsData}\r\n            planetsItem={planetsItem}\r\n          />\r\n          <Footer />\r\n        </div> :\r\n        <div>You are not authorized! Please do a valid login.</div>\r\n    }\r\n  </div>\r\n);\r\n\r\nMainViewUI.propTypes = {\r\n  loginSuccess: PropTypes.bool,\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  planetsItem: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  getPlanetsData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MainViewUI;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/landing/components/MainViewUI.jsx","import React from 'react';\r\n\r\nconst Header = () => (\r\n  <div className=\"Header\">\r\n    <h1>The Star Wars API</h1>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/landing/components/Header.jsx","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <div className=\"Footer\">\r\n    <p>Copyright @2018</p>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/landing/components/Footer.jsx","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ItemViewUI = ({ items, getPlanetsData, planetsItem }) => (\r\n  <div className=\"itemContainer\">\r\n    Galaxy Name:\r\n    <ul>\r\n      {\r\n        items && items.length > 0 ? items.map((item, index) =>\r\n          <li key={index}>\r\n            <button\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                getPlanetsData(item.homeworld);\r\n              }}\r\n            >\r\n              {item.name}\r\n            </button>\r\n          </li>,\r\n        ) : <li>Please wait or see console for API error...</li>\r\n      }\r\n    </ul>\r\n    <hr />\r\n    {\r\n      planetsItem ?\r\n        <ul style={{ color: '#b9b6b6' }}>\r\n          <li>Planet Name: {planetsItem.name}</li>\r\n          <li>Planet Population: {planetsItem.population}</li>\r\n          <li>Planet Terrain: {planetsItem.terrain}</li>\r\n        </ul> : 'No Valid Data present, Click on ablove options to see data and be patient while data loads'\r\n    }\r\n  </div>\r\n);\r\n\r\nItemViewUI.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      homeworld: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  planetsItem: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      poplulation: PropTypes.string.isRequired,\r\n      terrain: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  getPlanetsData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ItemViewUI;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/landing/components/ItemViewUI.jsx"],"sourceRoot":""}