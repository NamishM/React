{"version":3,"sources":["webpack:///./src/router/main.router.js","webpack:///./node_modules/react-router-redux/es/actions.js","webpack:///./node_modules/react-router-redux/es/index.js","webpack:///./node_modules/react-router-redux/es/middleware.js","webpack:///./src/redux/saga/index.js"],"names":["ErrorPage","Loading","MainView","Loadable","loader","loading","Login","App","store","propTypes","PropTypes","shape","getCartItems","bindLoginDetails","watchForLoginRequest","rootSaga","call","options","put","message","request","bool","some","obj","name","toLowerCase","username","password","pathname","push","takeEvery"],"mappings":"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","file":"2.ea6e4333f27776e89c6f.hot-update.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\nimport { Route, Redirect, Switch } from 'react-router';\r\nimport browserHistory from './browserHistory';\r\nimport { ConnectedRouter } from 'react-router-redux';\r\nimport Loadable from 'react-loadable';\r\n\r\nconst ErrorPage = () => (\r\n  <h1>400.. Bad Error!</h1> // eslint-disable-line\r\n);\r\n\r\nconst Loading = () => <div>Loading...</div>;\r\n\r\nconst MainView = Loadable({\r\n  loader: () => import(\r\n    /* webpackMode: \"lazy\" */\r\n    /* webpackChunkName: \"MainView\" */\r\n    'modules/landing/containers/MainView',\r\n  ),\r\n  loading: Loading,\r\n});\r\n\r\nconst Login = Loadable({\r\n  loader: () => import(\r\n    /* webpackMode: \"lazy\" */\r\n    /* webpackChunkName: \"LoginView\" */\r\n    'modules/login/containers/Login',\r\n  ),\r\n  loading: Loading,\r\n});\r\n\r\nconst App = ({ store }) => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={browserHistory} >\r\n      <Switch>\r\n        <Route path=\"/error\" component={ErrorPage} />\r\n        <Route path=\"/\" component={Login} />\r\n        <Route path=\"/main\" component={MainView} />\r\n        <Route path=\"*\" render={() => <Redirect to=\"/notfound\" />} />\r\n      </Switch>\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\n\r\nApp.propTypes = {\r\n  store: PropTypes.shape(),\r\n};\r\n\r\nexport default App;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/main.router.js","\n/**\n * This action type will be dispatched by the history actions below.\n * If you're writing a middleware to watch for navigation events, be sure to\n * look for actions of this type.\n */\nexport var CALL_HISTORY_METHOD = '@@router/CALL_HISTORY_METHOD';\n\nfunction updateLocation(method) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return {\n      type: CALL_HISTORY_METHOD,\n      payload: { method: method, args: args }\n    };\n  };\n}\n\n/**\n * These actions correspond to the history API.\n * The associated routerMiddleware will capture these events before they get to\n * your reducer and reissue them as the matching function on your history.\n */\nexport var push = updateLocation('push');\nexport var replace = updateLocation('replace');\nexport var go = updateLocation('go');\nexport var goBack = updateLocation('goBack');\nexport var goForward = updateLocation('goForward');\n\nexport var routerActions = { push: push, replace: replace, go: go, goBack: goBack, goForward: goForward };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-redux/es/actions.js\n// module id = 239\n// module chunks = 2","import _ConnectedRouter from './ConnectedRouter';\nexport { _ConnectedRouter as ConnectedRouter };\n\nexport { getLocation, createMatchSelector } from './selectors';\nexport { LOCATION_CHANGE, routerReducer } from './reducer';\nexport { CALL_HISTORY_METHOD, push, replace, go, goBack, goForward, routerActions } from './actions';\nimport _routerMiddleware from './middleware';\nexport { _routerMiddleware as routerMiddleware };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-redux/es/index.js\n// module id = 623\n// module chunks = 2","import { CALL_HISTORY_METHOD } from './actions';\n\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\nexport default function routerMiddleware(history) {\n  return function () {\n    return function (next) {\n      return function (action) {\n        if (action.type !== CALL_HISTORY_METHOD) {\n          return next(action);\n        }\n\n        var _action$payload = action.payload,\n            method = _action$payload.method,\n            args = _action$payload.args;\n\n        history[method].apply(history, args);\n      };\n    };\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-redux/es/middleware.js\n// module id = 626\n// module chunks = 2","import { getItems, getLoginDetails } from '../api';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { push } from 'react-router-redux';\r\nimport * as actions from '../actions/ItemsAction';\r\nimport * as types from '../constants/ActionTypes';\r\n\r\nexport function* getCartItems() {\r\n  try {\r\n    const options = yield call(getItems);\r\n    yield put(actions.itemsLoadSuccess(options));\r\n  } catch (e) {\r\n    yield put(actions.itemsLoadFailed(e.message));\r\n  }\r\n}\r\n\r\nexport function* bindLoginDetails(request) {\r\n  try {\r\n    const options = yield call(getLoginDetails);\r\n    const bool = options.some(\r\n      obj => obj.name.toLowerCase() === request.username.toLowerCase()\r\n        && obj.password === request.password);\r\n    if (bool) {\r\n      yield put(actions.LoginSuccess(options));\r\n      const pathname = '\\main'\r\n      yield put(push({\r\n        pathname,\r\n      }));\r\n    } else {\r\n      yield put(actions.LoginFaied('credentials missmatch'));\r\n    }\r\n  } catch (e) {\r\n    yield put(actions.LoginFaied(e.message));\r\n  }\r\n}\r\n\r\nexport function* watchForLoginRequest() {\r\n  yield takeEvery(types.GET_USER_API, bindLoginDetails);\r\n}\r\n\r\nexport function* rootSaga() {\r\n  yield [\r\n    watchForLoginRequest(),\r\n    getCartItems(),\r\n  ];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/saga/index.js"],"sourceRoot":""}