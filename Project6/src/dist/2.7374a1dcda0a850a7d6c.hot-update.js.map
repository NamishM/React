{"version":3,"sources":["webpack:///./src/redux/saga/index.js"],"names":["getCartItems","bindLoginDetails","watchForLoginRequest","rootSaga","call","options","put","message","request","bool","some","obj","name","toLowerCase","username","password","takeEvery"],"mappings":";;;;;;;;;;;;;;;;;;kGAMiBA,Y;mGASAC,gB;mGAcAC,oB;mGAIAC,Q;;AAjCjB;AACA;AACA;AACA;AACA;;AAEO,SAAUH,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEmB,wEAAAI,CAAK,sDAAL,CAFnB;;AAAA;AAEGC,iBAFH;AAAA;AAAA,iBAGG,uEAAAC,CAAI,+EAAyBD,OAAzB,CAAJ,CAHH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKG,uEAAAC,CAAI,8EAAwB,YAAEC,OAA1B,CAAJ,CALH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUN,gBAAV,CAA2BO,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEmB,wEAAAJ,CAAK,6DAAL,CAFnB;;AAAA;AAEGC,iBAFH;AAGGI,cAHH,GAGUJ,QAAQK,IAAR,CAAa;AAAA,mBAAOC,IAAIC,IAAJ,CAASC,WAAT,OAA2BL,QAAQM,QAAR,CAAiBD,WAAjB,EAA3B,IAA6DF,IAAII,QAAJ,KAAiBP,QAAQO,QAA7F;AAAA,WAAb,CAHV;;AAAA,eAICN,IAJD;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAKK,uEAAAH,CAAI,2EAAqBD,OAArB,CAAJ,CALL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,iBAOK,uEAAAC,CAAI,yEAAmB,uBAAnB,CAAJ,CAPL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBAUG,uEAAAA,CAAI,yEAAmB,aAAEC,OAArB,CAAJ,CAVH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUL,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACC,6EAAAc,CAAU,4EAAV,EAA8Bf,gBAA9B,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACC,CACJD,sBADI,EAEJF,cAFI,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;gCA3BUA,Y;;gCASAC,gB;;gCAcAC,oB;;gCAIAC,Q","file":"2.7374a1dcda0a850a7d6c.hot-update.js","sourcesContent":["import { getItems, getLoginDetails } from '../api';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\n// import * as types from '../constants/ActionTypes';\r\nimport * as actions from '../actions/ItemsAction';\r\nimport * as types from '../constants/ActionTypes';\r\n\r\nexport function* getCartItems() {\r\n  try {\r\n    const options = yield call(getItems);\r\n    yield put(actions.itemsLoadSuccess(options));\r\n  } catch (e) {\r\n    yield put(actions.itemsLoadFailed(e.message));\r\n  }\r\n}\r\n\r\nexport function* bindLoginDetails(request) {\r\n  try {\r\n    const options = yield call(getLoginDetails);\r\n    const bool = options.some(obj => obj.name.toLowerCase() === request.username.toLowerCase() && obj.password === request.password);\r\n    if (bool) {\r\n      yield put(actions.LoginSuccess(options));\r\n    } else {\r\n      yield put(actions.LoginFaied('credentials missmatch'));\r\n    }\r\n  } catch (e) {\r\n    yield put(actions.LoginFaied(e.message));\r\n  }\r\n}\r\n\r\nexport function* watchForLoginRequest() {\r\n  yield takeEvery(types.GET_USER_API, bindLoginDetails);\r\n}\r\n\r\nexport function* rootSaga() {\r\n  yield [\r\n    watchForLoginRequest(),\r\n    getCartItems(),\r\n  ];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/redux/saga/index.js"],"sourceRoot":""}